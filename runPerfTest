if [ -z "$1" ]; then 
	echo "Expected argument ./runPerfTest outputfile.txt"; 
	exit 1; 
fi

#Get root
sudo echo "Starting. Make sure to disable scaling first with. sudo cpufreq-set -c 3 --min 2200MHz --max 2200MHz"

function runSandboxedBenchmark_32() {
	echo -e "Nacl32\n" >> "$1"
	sleep 2
	sync && echo 3 | sudo tee /proc/sys/vm/drop_caches
	taskset -c 3 ./example_dynamic_nacl_32 ./test.jpeg ./test_out.jpeg ./nacl_build_simd_clang/mainCombine/libjpeg.nexe /home/shr/Code/nacl2/native_client/scons-out/nacl_irt-x86-32/staging/irt_core.nexe >> "$1"
	echo -e "\n" >> "$1"
}

function runUnsandboxedBenchmark_32(){
	echo -e "\nNon Nacl32\n" >> "$1"
	sleep 2
	sync && echo 3 | sudo tee /proc/sys/vm/drop_caches
	taskset -c 3 ./example_dynamic_non_nacl_32 ./test.jpeg ./test_out.jpeg ./non_nacl_build_simd_clang/.libs/libjpeg.so >> "$1"
	echo -e "\n" >> "$1"
}

function runSandboxedBenchmark_64() {
	echo -e "Nacl64\n" >> "$1"
	sleep 2
	sync && echo 3 | sudo tee /proc/sys/vm/drop_caches
	taskset -c 3 ./example_dynamic_nacl_64 ./test.jpeg ./test_out.jpeg ./nacl_build_simd_64/mainCombine/libjpeg.nexe /home/shr/Code/nacl2/native_client/scons-out/nacl_irt-x86-64/staging/irt_core.nexe >> "$1"
	echo -e "\n" >> "$1"	
}

function runUnsandboxedBenchmark_64(){
	echo -e "\nNon Nacl64\n" >> "$1"
	sleep 2
	sync && echo 3 | sudo tee /proc/sys/vm/drop_caches
	taskset -c 3 ./example_dynamic_non_nacl_64 ./test.jpeg ./test_out.jpeg ./non_nacl_build_simd_clang_64/.libs/libjpeg.so >> "$1"
	echo -e "\n" >> "$1"
}


function runSandboxedFatBenchmark() {
	echo -e "Nacl-Fat\n" >> "$1"
	sleep 2
	sync && echo 3 | sudo tee /proc/sys/vm/drop_caches
	sudo perf stat -d -d -d --cpu=3 -o benchmark_perf.txt taskset -c 3 ./example_dynamic_nacl_fat_client ./test.jpeg ./test_out.jpeg ./nacl_build/.libs/libjpeg.so ./lib_example_dynamic_non_nacl.so /home/shr/Code/nacl2/native_client/toolchain/linux_x86/nacl_x86_glibc/x86_64-nacl/lib32/ /home/shr/Code/nacl2/native_client/scons-out/nacl-x86-32-glibc/staging/dyn_ldr_sandbox_init.nexe >> "$1"
	echo -e "\n" >> "$1"
	cat benchmark_perf.txt >> "$1"
	rm -f benchmark_perf.txt
}

for i in 1 2; do
	runSandboxedBenchmark_32 "$1"
	sleep 2
	runUnsandboxedBenchmark_32 "$1"
	sleep 2
	runSandboxedBenchmark_64 "$1"
	sleep 2
	runUnsandboxedBenchmark_64 "$1"
	sleep 2
	# runSandboxedFatBenchmark "$1"
	# sleep 2
done


echo "Output results to $1"
cat "$1" | grep -E "Nacl|invocations"
